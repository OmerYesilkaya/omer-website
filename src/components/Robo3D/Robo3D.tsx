/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Rostenbach (https://sketchfab.com/Rostenbach)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/terrarium-bot-02-9c80016f267f475a812c2244fdb34355
title: Terrarium Bot 02
*/

import { useRef } from "react";
import { Html, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const Robo3D: React.FC<JSX.IntrinsicElements["group"]> = ({ ...props }) => {
    const group = useRef<any>();
    const { nodes, materials } = useGLTF("/assets/robo/scene.gltf") as any;

    useFrame((state) => {
        if (!group.current) return;
        const t = state.clock.getElapsedTime();
        group.current.rotation.x = Math.cos(t / 4) / 18;
        group.current.rotation.y = (Math.PI / 180) * 25 + Math.sin(t / 4) / 18;
        group.current.rotation.z = (1 + Math.sin(t / 1.5)) / 20;
        group.current.position.y = (1 + Math.sin(t / 1.5)) / 10;
    });

    return (
        <group ref={group} {...props} dispose={null}>
            <group rotation={[Math.PI / 2, 0, 0]} scale={-0.4}>
                <Html scale={-1} rotation={[-Math.PI / 2, -Math.PI / 4, 0]} position={[0, -1.3, 2]} transform occlude>
                    <div className="annotation">
                        <span className="text-2xl">ðŸ˜¡</span>
                        <span className="text-2xl">ðŸ¤–</span>
                        <span className="text-2xl">ðŸ’€</span>
                    </div>
                </Html>
                <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
                    <group position={[0.85, -34.57, -25.82]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.connector_low_robot_1_0.geometry} material={materials.robot_1} />
                    </group>
                    <group position={[0.85, -34.57, -25.82]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.achse_low_robot_1_0.geometry} material={materials.robot_1} />
                    </group>
                    <group position={[0.85, -34.57, -25.82]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.angle_low_robot_1_0.geometry} material={materials.robot_1} />
                    </group>
                    <group position={[0, 32, -23.76]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.motor_low_robot_2_0.geometry} material={materials.robot_2} />
                    </group>
                    <group position={[0, 32, -23.76]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.plate_low_robot_2_0.geometry} material={materials.robot_2} />
                    </group>
                    <group position={[0, 32, -23.76]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.ring_low_robot_2_0.geometry} material={materials.robot_2} />
                    </group>
                    <group position={[0, 32, -23.76]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.face_low_robot_2_0.geometry} material={materials.robot_2} />
                    </group>
                    <group position={[0, 32, -23.76]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.baseblock_low_robot_2_0.geometry} material={materials.robot_2} />
                    </group>
                    <group position={[0, 32, -23.76]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.pipe_low_robot_2_0.geometry} material={materials.robot_2} />
                    </group>
                    <group position={[0.85, -34.57, -25.82]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.base_low_robot_1_0.geometry} material={materials.robot_1} />
                    </group>
                    <group position={[0.85, -34.57, -25.82]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.basebottom_low_robot_1_0.geometry} material={materials.robot_1} />
                    </group>
                    <group position={[0, 32, -23.76]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.legs_low_robot_2_0.geometry} material={materials.robot_2} />
                    </group>
                    <group position={[0, 152.86, -23.76]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh geometry={nodes.glas_low_glass_0.geometry} material={materials.glass} />
                    </group>
                    <group position={[16.23, 88.9, -57.25]} rotation={[-1.06, 0.48, -2.15]} scale={11.87}>
                        <mesh geometry={nodes.gravel_inside_0.geometry} material={materials.inside} />
                    </group>
                </group>
            </group>
        </group>
    );
};

useGLTF.preload("/scene.gltf");

export default Robo3D;
